// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drand/api.proto

package drand

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// PublicRandRequest requests a public random value that has been generated in a
// unbiasable way and verifiable.
type PublicRandRequest struct {
	// round uniquely identifies a beacon. If round == 0 (or unspecified), then
	// the response will contain the last.
	Round                uint64   `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicRandRequest) Reset()         { *m = PublicRandRequest{} }
func (m *PublicRandRequest) String() string { return proto.CompactTextString(m) }
func (*PublicRandRequest) ProtoMessage()    {}
func (*PublicRandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0cff3fc81cf7d79, []int{0}
}

func (m *PublicRandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicRandRequest.Unmarshal(m, b)
}
func (m *PublicRandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicRandRequest.Marshal(b, m, deterministic)
}
func (m *PublicRandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicRandRequest.Merge(m, src)
}
func (m *PublicRandRequest) XXX_Size() int {
	return xxx_messageInfo_PublicRandRequest.Size(m)
}
func (m *PublicRandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicRandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublicRandRequest proto.InternalMessageInfo

func (m *PublicRandRequest) GetRound() uint64 {
	if m != nil {
		return m.Round
	}
	return 0
}

// PublicRandResponse holds a signature which is the random value. It can be
// verified thanks to the distributed public key of the nodes that have ran the
// DKG protocol and is unbiasable. The randomness can be verified using the BLS
// verification routine with the message "round || previous_rand".
type PublicRandResponse struct {
	Round             uint64 `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	Signature         []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	PreviousSignature []byte `protobuf:"bytes,3,opt,name=previous_signature,json=previousSignature,proto3" json:"previous_signature,omitempty"`
	// randomness is simply there to demonstrate - it is the hash of the
	// signature. It should be computed locally.
	Randomness           []byte   `protobuf:"bytes,4,opt,name=randomness,proto3" json:"randomness,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicRandResponse) Reset()         { *m = PublicRandResponse{} }
func (m *PublicRandResponse) String() string { return proto.CompactTextString(m) }
func (*PublicRandResponse) ProtoMessage()    {}
func (*PublicRandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0cff3fc81cf7d79, []int{1}
}

func (m *PublicRandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicRandResponse.Unmarshal(m, b)
}
func (m *PublicRandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicRandResponse.Marshal(b, m, deterministic)
}
func (m *PublicRandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicRandResponse.Merge(m, src)
}
func (m *PublicRandResponse) XXX_Size() int {
	return xxx_messageInfo_PublicRandResponse.Size(m)
}
func (m *PublicRandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicRandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublicRandResponse proto.InternalMessageInfo

func (m *PublicRandResponse) GetRound() uint64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *PublicRandResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *PublicRandResponse) GetPreviousSignature() []byte {
	if m != nil {
		return m.PreviousSignature
	}
	return nil
}

func (m *PublicRandResponse) GetRandomness() []byte {
	if m != nil {
		return m.Randomness
	}
	return nil
}

// PrivateRandRequest is the message to send when requesting a private random
// value.
type PrivateRandRequest struct {
	// Request is the ECIES encryption of an ephemereal public key towards which
	// to encrypt the private randomness. The format of the bytes is denoted by
	// the ECIES encryption used by drand.
	Request              []byte   `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateRandRequest) Reset()         { *m = PrivateRandRequest{} }
func (m *PrivateRandRequest) String() string { return proto.CompactTextString(m) }
func (*PrivateRandRequest) ProtoMessage()    {}
func (*PrivateRandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0cff3fc81cf7d79, []int{2}
}

func (m *PrivateRandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateRandRequest.Unmarshal(m, b)
}
func (m *PrivateRandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateRandRequest.Marshal(b, m, deterministic)
}
func (m *PrivateRandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateRandRequest.Merge(m, src)
}
func (m *PrivateRandRequest) XXX_Size() int {
	return xxx_messageInfo_PrivateRandRequest.Size(m)
}
func (m *PrivateRandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateRandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateRandRequest proto.InternalMessageInfo

func (m *PrivateRandRequest) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

type PrivateRandResponse struct {
	// Responses is the ECIES encryption of the private randomness using the
	// ephemereal public key sent in the request.  The format of the bytes is
	// denoted by the ECIES  encryption used by drand.
	Response             []byte   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateRandResponse) Reset()         { *m = PrivateRandResponse{} }
func (m *PrivateRandResponse) String() string { return proto.CompactTextString(m) }
func (*PrivateRandResponse) ProtoMessage()    {}
func (*PrivateRandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0cff3fc81cf7d79, []int{3}
}

func (m *PrivateRandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateRandResponse.Unmarshal(m, b)
}
func (m *PrivateRandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateRandResponse.Marshal(b, m, deterministic)
}
func (m *PrivateRandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateRandResponse.Merge(m, src)
}
func (m *PrivateRandResponse) XXX_Size() int {
	return xxx_messageInfo_PrivateRandResponse.Size(m)
}
func (m *PrivateRandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateRandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateRandResponse proto.InternalMessageInfo

func (m *PrivateRandResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type HomeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HomeRequest) Reset()         { *m = HomeRequest{} }
func (m *HomeRequest) String() string { return proto.CompactTextString(m) }
func (*HomeRequest) ProtoMessage()    {}
func (*HomeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0cff3fc81cf7d79, []int{4}
}

func (m *HomeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HomeRequest.Unmarshal(m, b)
}
func (m *HomeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HomeRequest.Marshal(b, m, deterministic)
}
func (m *HomeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeRequest.Merge(m, src)
}
func (m *HomeRequest) XXX_Size() int {
	return xxx_messageInfo_HomeRequest.Size(m)
}
func (m *HomeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HomeRequest proto.InternalMessageInfo

type HomeResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HomeResponse) Reset()         { *m = HomeResponse{} }
func (m *HomeResponse) String() string { return proto.CompactTextString(m) }
func (*HomeResponse) ProtoMessage()    {}
func (*HomeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0cff3fc81cf7d79, []int{5}
}

func (m *HomeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HomeResponse.Unmarshal(m, b)
}
func (m *HomeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HomeResponse.Marshal(b, m, deterministic)
}
func (m *HomeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeResponse.Merge(m, src)
}
func (m *HomeResponse) XXX_Size() int {
	return xxx_messageInfo_HomeResponse.Size(m)
}
func (m *HomeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HomeResponse proto.InternalMessageInfo

func (m *HomeResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*PublicRandRequest)(nil), "drand.PublicRandRequest")
	proto.RegisterType((*PublicRandResponse)(nil), "drand.PublicRandResponse")
	proto.RegisterType((*PrivateRandRequest)(nil), "drand.PrivateRandRequest")
	proto.RegisterType((*PrivateRandResponse)(nil), "drand.PrivateRandResponse")
	proto.RegisterType((*HomeRequest)(nil), "drand.HomeRequest")
	proto.RegisterType((*HomeResponse)(nil), "drand.HomeResponse")
}

func init() {
	proto.RegisterFile("drand/api.proto", fileDescriptor_c0cff3fc81cf7d79)
}

var fileDescriptor_c0cff3fc81cf7d79 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4b, 0x6f, 0xda, 0x40,
	0x10, 0x96, 0x29, 0xd0, 0x32, 0x50, 0xb5, 0x0c, 0x15, 0x75, 0xad, 0xaa, 0x42, 0x96, 0xda, 0xd2,
	0x43, 0x4d, 0x1f, 0xd7, 0x5c, 0xf2, 0x38, 0x84, 0x1b, 0x32, 0xb7, 0x5c, 0xa2, 0xb5, 0xbd, 0x80,
	0x95, 0x78, 0xd7, 0xd9, 0x07, 0x7f, 0x25, 0x3f, 0x2a, 0x7f, 0x2a, 0x62, 0x77, 0xb1, 0x4d, 0xe0,
	0x94, 0x8b, 0xb5, 0xdf, 0x63, 0x66, 0x67, 0x3f, 0x0f, 0x7c, 0xc8, 0x04, 0x61, 0xd9, 0x8c, 0x94,
	0x79, 0x54, 0x0a, 0xae, 0x38, 0x76, 0x0c, 0x11, 0xa0, 0xe5, 0x53, 0x5e, 0x14, 0x9c, 0x59, 0x29,
	0xfc, 0x05, 0xc3, 0x85, 0x4e, 0xee, 0xf3, 0x34, 0x26, 0x2c, 0x8b, 0xe9, 0x83, 0xa6, 0x52, 0xe1,
	0x27, 0xe8, 0x08, 0xae, 0x59, 0xe6, 0x7b, 0x13, 0x6f, 0xda, 0x8e, 0x2d, 0x08, 0x1f, 0x3d, 0xc0,
	0xa6, 0x57, 0x96, 0x9c, 0x49, 0x7a, 0xda, 0x8c, 0x5f, 0xa1, 0x27, 0xf3, 0x35, 0x23, 0x4a, 0x0b,
	0xea, 0xb7, 0x26, 0xde, 0x74, 0x10, 0xd7, 0x04, 0xfe, 0x06, 0x2c, 0x05, 0xdd, 0xe6, 0x5c, 0xcb,
	0xdb, 0xda, 0xf6, 0xc6, 0xd8, 0x86, 0x7b, 0x65, 0x59, 0xd9, 0xbf, 0x01, 0xec, 0x26, 0xe7, 0x05,
	0xa3, 0x52, 0xfa, 0x6d, 0x63, 0x6b, 0x30, 0x61, 0x04, 0xb8, 0x10, 0xf9, 0x96, 0x28, 0xda, 0x7c,
	0x85, 0x0f, 0x6f, 0x85, 0x3d, 0x9a, 0xd1, 0x06, 0xf1, 0x1e, 0x86, 0x7f, 0x61, 0x74, 0xe0, 0x77,
	0x2f, 0x09, 0xe0, 0x9d, 0x70, 0x67, 0x57, 0x51, 0xe1, 0xf0, 0x3d, 0xf4, 0xaf, 0x79, 0x41, 0x5d,
	0xef, 0xf0, 0x07, 0x0c, 0x2c, 0x74, 0xa5, 0x63, 0xe8, 0x4a, 0x45, 0x94, 0x96, 0xa6, 0xb0, 0x17,
	0x3b, 0xf4, 0xef, 0xa9, 0x05, 0x5d, 0x9b, 0x19, 0x9e, 0x03, 0xd4, 0xe9, 0xa1, 0x1f, 0x99, 0x9f,
	0x11, 0x1d, 0x85, 0x1f, 0x7c, 0x39, 0xa1, 0xb8, 0x5b, 0xe6, 0xf0, 0xb1, 0x66, 0x97, 0x4a, 0x50,
	0x52, 0xbc, 0xaa, 0xd1, 0x1f, 0x0f, 0xaf, 0xa0, 0xdf, 0x88, 0x00, 0x2b, 0xef, 0x51, 0x8c, 0x41,
	0x70, 0x4a, 0x72, 0x03, 0x9d, 0x41, 0xef, 0x72, 0x43, 0x72, 0x36, 0x67, 0x2b, 0x8e, 0x9f, 0x9d,
	0xb1, 0x62, 0xf6, 0x1d, 0xc6, 0x2f, 0x85, 0x05, 0x49, 0xef, 0xa8, 0xc2, 0x19, 0xb4, 0x77, 0x21,
	0x22, 0x3a, 0xbd, 0x11, 0x70, 0x30, 0x3a, 0xe0, 0xec, 0x75, 0x17, 0x3f, 0x6f, 0xbe, 0xaf, 0x73,
	0xb5, 0xd1, 0x49, 0x94, 0xf2, 0x62, 0x66, 0xb7, 0xd9, 0x7e, 0xcd, 0x32, 0x27, 0x7a, 0x65, 0x61,
	0xd2, 0x35, 0xf8, 0xff, 0x73, 0x00, 0x00, 0x00, 0xff, 0xff, 0x76, 0x58, 0x94, 0xee, 0x0a, 0x03,
	0x00, 0x00,
}
