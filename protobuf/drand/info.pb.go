// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drand/info.proto

package drand // import "github.com/dedis/drand/protobuf/drand"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import crypto "github.com/dedis/drand/protobuf/crypto"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DistKeyRequest requests the distributed public key used during the randomness generation process
type DistKeyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistKeyRequest) Reset()         { *m = DistKeyRequest{} }
func (m *DistKeyRequest) String() string { return proto.CompactTextString(m) }
func (*DistKeyRequest) ProtoMessage()    {}
func (*DistKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_2abfb4fde7654044, []int{0}
}
func (m *DistKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistKeyRequest.Unmarshal(m, b)
}
func (m *DistKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistKeyRequest.Marshal(b, m, deterministic)
}
func (dst *DistKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistKeyRequest.Merge(dst, src)
}
func (m *DistKeyRequest) XXX_Size() int {
	return xxx_messageInfo_DistKeyRequest.Size(m)
}
func (m *DistKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DistKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DistKeyRequest proto.InternalMessageInfo

type DistKeyResponse struct {
	Key                  *crypto.Point `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DistKeyResponse) Reset()         { *m = DistKeyResponse{} }
func (m *DistKeyResponse) String() string { return proto.CompactTextString(m) }
func (*DistKeyResponse) ProtoMessage()    {}
func (*DistKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_2abfb4fde7654044, []int{1}
}
func (m *DistKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistKeyResponse.Unmarshal(m, b)
}
func (m *DistKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistKeyResponse.Marshal(b, m, deterministic)
}
func (dst *DistKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistKeyResponse.Merge(dst, src)
}
func (m *DistKeyResponse) XXX_Size() int {
	return xxx_messageInfo_DistKeyResponse.Size(m)
}
func (m *DistKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DistKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DistKeyResponse proto.InternalMessageInfo

func (m *DistKeyResponse) GetKey() *crypto.Point {
	if m != nil {
		return m.Key
	}
	return nil
}

type HomeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HomeRequest) Reset()         { *m = HomeRequest{} }
func (m *HomeRequest) String() string { return proto.CompactTextString(m) }
func (*HomeRequest) ProtoMessage()    {}
func (*HomeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_2abfb4fde7654044, []int{2}
}
func (m *HomeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HomeRequest.Unmarshal(m, b)
}
func (m *HomeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HomeRequest.Marshal(b, m, deterministic)
}
func (dst *HomeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeRequest.Merge(dst, src)
}
func (m *HomeRequest) XXX_Size() int {
	return xxx_messageInfo_HomeRequest.Size(m)
}
func (m *HomeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HomeRequest proto.InternalMessageInfo

type HomeResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HomeResponse) Reset()         { *m = HomeResponse{} }
func (m *HomeResponse) String() string { return proto.CompactTextString(m) }
func (*HomeResponse) ProtoMessage()    {}
func (*HomeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_2abfb4fde7654044, []int{3}
}
func (m *HomeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HomeResponse.Unmarshal(m, b)
}
func (m *HomeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HomeResponse.Marshal(b, m, deterministic)
}
func (dst *HomeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeResponse.Merge(dst, src)
}
func (m *HomeResponse) XXX_Size() int {
	return xxx_messageInfo_HomeResponse.Size(m)
}
func (m *HomeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HomeResponse proto.InternalMessageInfo

func (m *HomeResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GroupRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupRequest) Reset()         { *m = GroupRequest{} }
func (m *GroupRequest) String() string { return proto.CompactTextString(m) }
func (*GroupRequest) ProtoMessage()    {}
func (*GroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_2abfb4fde7654044, []int{4}
}
func (m *GroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRequest.Unmarshal(m, b)
}
func (m *GroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRequest.Marshal(b, m, deterministic)
}
func (dst *GroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRequest.Merge(dst, src)
}
func (m *GroupRequest) XXX_Size() int {
	return xxx_messageInfo_GroupRequest.Size(m)
}
func (m *GroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRequest proto.InternalMessageInfo

// GroupResponse contains the Group information currently used by the drand node
type GroupResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Threshold            uint32   `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Period               uint32   `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	Distkey              []string `protobuf:"bytes,4,rep,name=distkey,proto3" json:"distkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupResponse) Reset()         { *m = GroupResponse{} }
func (m *GroupResponse) String() string { return proto.CompactTextString(m) }
func (*GroupResponse) ProtoMessage()    {}
func (*GroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_2abfb4fde7654044, []int{5}
}
func (m *GroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupResponse.Unmarshal(m, b)
}
func (m *GroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupResponse.Marshal(b, m, deterministic)
}
func (dst *GroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupResponse.Merge(dst, src)
}
func (m *GroupResponse) XXX_Size() int {
	return xxx_messageInfo_GroupResponse.Size(m)
}
func (m *GroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GroupResponse proto.InternalMessageInfo

func (m *GroupResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *GroupResponse) GetThreshold() uint32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *GroupResponse) GetPeriod() uint32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *GroupResponse) GetDistkey() []string {
	if m != nil {
		return m.Distkey
	}
	return nil
}

// Node represents the information about a drand's node
type Node struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	TLS                  bool     `protobuf:"varint,3,opt,name=TLS,proto3" json:"TLS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_info_2abfb4fde7654044, []int{6}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Node) GetTLS() bool {
	if m != nil {
		return m.TLS
	}
	return false
}

func init() {
	proto.RegisterType((*DistKeyRequest)(nil), "drand.DistKeyRequest")
	proto.RegisterType((*DistKeyResponse)(nil), "drand.DistKeyResponse")
	proto.RegisterType((*HomeRequest)(nil), "drand.HomeRequest")
	proto.RegisterType((*HomeResponse)(nil), "drand.HomeResponse")
	proto.RegisterType((*GroupRequest)(nil), "drand.GroupRequest")
	proto.RegisterType((*GroupResponse)(nil), "drand.GroupResponse")
	proto.RegisterType((*Node)(nil), "drand.Node")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InfoClient is the client API for Info service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InfoClient interface {
	Group(ctx context.Context, in *GroupRequest, opts ...grpc.CallOption) (*GroupResponse, error)
	DistKey(ctx context.Context, in *DistKeyRequest, opts ...grpc.CallOption) (*DistKeyResponse, error)
	Home(ctx context.Context, in *HomeRequest, opts ...grpc.CallOption) (*HomeResponse, error)
}

type infoClient struct {
	cc *grpc.ClientConn
}

func NewInfoClient(cc *grpc.ClientConn) InfoClient {
	return &infoClient{cc}
}

func (c *infoClient) Group(ctx context.Context, in *GroupRequest, opts ...grpc.CallOption) (*GroupResponse, error) {
	out := new(GroupResponse)
	err := c.cc.Invoke(ctx, "/drand.Info/Group", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoClient) DistKey(ctx context.Context, in *DistKeyRequest, opts ...grpc.CallOption) (*DistKeyResponse, error) {
	out := new(DistKeyResponse)
	err := c.cc.Invoke(ctx, "/drand.Info/DistKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoClient) Home(ctx context.Context, in *HomeRequest, opts ...grpc.CallOption) (*HomeResponse, error) {
	out := new(HomeResponse)
	err := c.cc.Invoke(ctx, "/drand.Info/Home", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InfoServer is the server API for Info service.
type InfoServer interface {
	Group(context.Context, *GroupRequest) (*GroupResponse, error)
	DistKey(context.Context, *DistKeyRequest) (*DistKeyResponse, error)
	Home(context.Context, *HomeRequest) (*HomeResponse, error)
}

func RegisterInfoServer(s *grpc.Server, srv InfoServer) {
	s.RegisterService(&_Info_serviceDesc, srv)
}

func _Info_Group_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).Group(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drand.Info/Group",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).Group(ctx, req.(*GroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Info_DistKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).DistKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drand.Info/DistKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).DistKey(ctx, req.(*DistKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Info_Home_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HomeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).Home(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/drand.Info/Home",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).Home(ctx, req.(*HomeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Info_serviceDesc = grpc.ServiceDesc{
	ServiceName: "drand.Info",
	HandlerType: (*InfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Group",
			Handler:    _Info_Group_Handler,
		},
		{
			MethodName: "DistKey",
			Handler:    _Info_DistKey_Handler,
		},
		{
			MethodName: "Home",
			Handler:    _Info_Home_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "drand/info.proto",
}

func init() { proto.RegisterFile("drand/info.proto", fileDescriptor_info_2abfb4fde7654044) }

var fileDescriptor_info_2abfb4fde7654044 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xcd, 0x6e, 0xd3, 0x40,
	0x14, 0x85, 0xe5, 0xc4, 0x49, 0xc9, 0xcd, 0x4f, 0xd3, 0x49, 0x29, 0xc1, 0xea, 0xc2, 0x58, 0x02,
	0xbc, 0xb2, 0xa5, 0x74, 0xcd, 0x06, 0x55, 0x02, 0x54, 0x84, 0x90, 0xcb, 0x8a, 0x9d, 0xd3, 0xb9,
	0x71, 0x46, 0x24, 0x73, 0x8d, 0x67, 0xbc, 0xc8, 0xb6, 0xaf, 0xc0, 0xa3, 0xf1, 0x0a, 0x48, 0xbc,
	0x06, 0x9a, 0x1f, 0xd3, 0xa6, 0x3b, 0x9f, 0x73, 0x73, 0xbf, 0x99, 0x93, 0x33, 0x30, 0xe7, 0x4d,
	0x29, 0x79, 0x2e, 0xe4, 0x86, 0xb2, 0xba, 0x21, 0x4d, 0x6c, 0x60, 0x9d, 0xe8, 0xfc, 0xae, 0x39,
	0xd4, 0x9a, 0x72, 0xdc, 0xe1, 0x1e, 0xa5, 0x76, 0xc3, 0xe8, 0xb2, 0x22, 0xaa, 0x76, 0x98, 0x97,
	0xb5, 0xc8, 0x4b, 0x29, 0x49, 0x97, 0x5a, 0x90, 0x54, 0x6e, 0x9a, 0xcc, 0x61, 0x76, 0x2d, 0x94,
	0xbe, 0xc1, 0x43, 0x81, 0x3f, 0x5b, 0x54, 0x3a, 0xb9, 0x82, 0xd3, 0xff, 0x8e, 0xaa, 0x49, 0x2a,
	0x64, 0x31, 0xf4, 0x7f, 0xe0, 0x61, 0x19, 0xc4, 0x41, 0x3a, 0x5e, 0xcd, 0xb2, 0x8e, 0xff, 0x95,
	0x84, 0xd4, 0x85, 0x19, 0x25, 0x53, 0x18, 0x7f, 0xa4, 0x3d, 0x76, 0x8c, 0x37, 0x30, 0x71, 0xd2,
	0x03, 0x2e, 0x60, 0xa8, 0x74, 0xa9, 0x5b, 0x65, 0x19, 0xa3, 0xc2, 0xab, 0x64, 0x06, 0x93, 0x0f,
	0x0d, 0xb5, 0x75, 0xb7, 0x77, 0x1f, 0xc0, 0xd4, 0x1b, 0x7e, 0xf3, 0x15, 0x0c, 0x24, 0x71, 0x34,
	0x8b, 0xfd, 0x74, 0xbc, 0x1a, 0x67, 0x36, 0x6a, 0xf6, 0x85, 0x38, 0x16, 0x6e, 0xc2, 0x2e, 0x61,
	0xa4, 0xb7, 0x0d, 0xaa, 0x2d, 0xed, 0xf8, 0xb2, 0x17, 0x07, 0xe9, 0xb4, 0x78, 0x30, 0xcc, 0xd1,
	0x35, 0x36, 0x82, 0xf8, 0xb2, 0x6f, 0x47, 0x5e, 0xb1, 0x25, 0x9c, 0x70, 0xa1, 0xb4, 0xc9, 0x15,
	0xc6, 0xfd, 0x74, 0x54, 0x74, 0x32, 0xb9, 0x86, 0xd0, 0xe0, 0xcd, 0x2f, 0x4a, 0xce, 0x1b, 0x54,
	0xdd, 0xad, 0x3b, 0xc9, 0xe6, 0xee, 0xff, 0xe8, 0x59, 0xd7, 0x7c, 0x1a, 0xe7, 0xdb, 0xe7, 0x5b,
	0x7b, 0xc4, 0xb3, 0xc2, 0x7c, 0xae, 0xfe, 0x06, 0x10, 0x7e, 0x92, 0x1b, 0x62, 0x37, 0x30, 0xb0,
	0x91, 0xd8, 0xc2, 0xdf, 0xfd, 0x71, 0xe2, 0xe8, 0xfc, 0xd8, 0x74, 0xa9, 0x93, 0x17, 0xf7, 0xbf,
	0xff, 0xfc, 0xea, 0x9d, 0xb1, 0x53, 0xdb, 0x9a, 0x69, 0x3a, 0xaf, 0x2c, 0xe3, 0x16, 0x4e, 0x7c,
	0x39, 0xec, 0xb9, 0xdf, 0x3c, 0xae, 0x2f, 0xba, 0x78, 0x6a, 0x7b, 0xe4, 0x4b, 0x8b, 0x5c, 0xb0,
	0xb3, 0x07, 0xa4, 0x0f, 0xcc, 0xde, 0x41, 0x68, 0xda, 0x62, 0xcc, 0xaf, 0x3e, 0x6a, 0x32, 0x5a,
	0x1c, 0x79, 0x9e, 0x35, 0xb1, 0xac, 0x21, 0x0b, 0x0d, 0xeb, 0xfd, 0xdb, 0xef, 0xaf, 0x2b, 0xa1,
	0xb7, 0xed, 0x3a, 0xbb, 0xa3, 0x7d, 0xce, 0x91, 0x0b, 0x95, 0xbb, 0x27, 0x6a, 0x9f, 0xd8, 0xba,
	0xdd, 0x38, 0xb9, 0x1e, 0x5a, 0x7d, 0xf5, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xef, 0xc3, 0xe2, 0x19,
	0xc1, 0x02, 0x00, 0x00,
}
