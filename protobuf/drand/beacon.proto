/*
 * This protobuf file contains the definitions of all the calls and messages
 * used by drand nodes themselves to create the distributed randomness beacon.
 */ 
syntax = "proto3";

package drand;

option go_package = "github.com/dedis/drand/protobuf/drand";

// BeaconAPI holds the relevant calls to create a distributed key with the
// participants and to create new publicly verifiable randomness.
service Beacon {
   rpc NewBeacon(BeaconRequest) returns (BeaconResponse);
}

// BeaconRequest  holds a link to a previous signature, a timestamp and the
// partial signature for this beacon. All participants send and collects many of
// theses partial beacon packets to recreate locally one beacon
message BeaconRequest {
    uint64 round = 1;
    bytes previous_rand = 2;
    // To prove the issuer comes from a valid node
    // It is a group point prefixed by the index of the issuer
    bytes partial_rand = 3;
}

message BeaconResponse {
    bytes partial_rand = 1;
}
